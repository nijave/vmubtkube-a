apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: database-write-hashring
    app.kubernetes.io/instance: thanos-receive-ingestor-default
    app.kubernetes.io/name: thanos-receive
    app.kubernetes.io/version: v0.37.2
    controller.receive.thanos.io: thanos-receive-controller
    controller.receive.thanos.io/hashring: default
  name: thanos-receive-ingestor-default
  namespace: thanos
spec:
  replicas: 5
  podManagementPolicy: "Parallel"
  minReadySeconds: 15
  selector:
    matchLabels:
      app.kubernetes.io/component: database-write-hashring
      app.kubernetes.io/instance: thanos-receive-ingestor-default
      app.kubernetes.io/name: thanos-receive
      controller.receive.thanos.io/hashring: default
  serviceName: thanos-receive-ingestor-default
  template:
    metadata:
      labels:
        app.kubernetes.io/component: database-write-hashring
        app.kubernetes.io/instance: thanos-receive-ingestor-default
        app.kubernetes.io/name: thanos-receive
        app.kubernetes.io/version: v0.37.2
        controller.receive.thanos.io: thanos-receive-controller
        controller.receive.thanos.io/hashring: default
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - thanos-receive
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - thanos-receive-ingestor-default
              namespaces:
              - thanos
              topologyKey: kubernetes.io/hostname
            weight: 100
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - thanos-receive
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - thanos-receive-ingestor-default
              namespaces:
              - thanos
              topologyKey: topology.kubernetes.io/zone
            weight: 100
      containers:
      - args:
        - receive
        - --log.level=debug
        - --log.format=logfmt
        - --grpc-grace-period=15s
        - --http-grace-period=15s
        - --grpc-address=0.0.0.0:10901
        - --http-address=0.0.0.0:10902
        - --remote-write.address=0.0.0.0:19291
        - --tsdb.path=/var/thanos/receive
        - --tsdb.retention=8h
        - --tsdb.max-retention-bytes=15GB
        - --tsdb.memory-snapshot-on-shutdown
        - --tsdb.enable-native-histograms
        - --tsdb.too-far-in-future.time-window=30s
        # - --label=prometheus_replica="$(NAME)"
        - --label=thanos_replica="$(NAME)"
        - --label=receive="true"
        - --receive.hashrings-algorithm=ketama
        - --receive.local-endpoint=$(NAME).thanos-receive-ingestor-default.$(NAMESPACE).svc.cluster.local:10901
        - --objstore.config=$(OBJSTORE_CONFIG)
        - --enable-auto-gomemlimit
        - --tracing.config=$(TRACING_CONFIG)
        env:
        - name: NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: OBJSTORE_CONFIG
          valueFrom:
            secretKeyRef:
              key: thanos.yaml
              name: thanos-objectstorage
        - name: TRACING_CONFIG
          valueFrom:
            configMapKeyRef:
              name: thanos-tracing
              key: tracing.yaml
        image: registry.apps.nickv.me/thanos:v0.37.2
        imagePullPolicy: IfNotPresent
        name: thanos-receive
        ports:
        - containerPort: 10901
          name: grpc
        - containerPort: 10902
          name: http
        - containerPort: 19291
          name: remote-write
        readinessProbe:
          failureThreshold: 12
          httpGet:
            path: /-/ready
            port: 10902
            scheme: HTTP
          periodSeconds: 5
          initialDelaySeconds: 30
        livenessProbe:
          failureThreshold: 7
          httpGet:
            path: /-/healthy
            port: 10902
            scheme: HTTP
          periodSeconds: 5
        resources:
          limits:
            memory: 6Gi
            cpu: 1250m
          requests:
            memory: 2Gi
            cpu: 700m
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/thanos/receive
          name: data
          readOnly: false
        - mountPath: /etc/kubernetes/pki/ca.crt
          name: k8s-cluster-ca
          subPath: ca.crt
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
      serviceAccountName: thanos-receive-ingestor
      terminationGracePeriodSeconds: 900
      volumes:
      - name: k8s-cluster-ca
        hostPath:
          path: /etc/kubernetes/pki
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app.kubernetes.io/component: database-write-hashring
        app.kubernetes.io/instance: thanos-receive-ingestor-default
        app.kubernetes.io/name: thanos-receive
        controller.receive.thanos.io/hashring: default
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
