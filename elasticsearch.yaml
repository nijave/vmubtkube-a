---
apiVersion: v1
kind: Namespace
metadata:
  name: elasticsearch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: es-provision-secrets
  namespace: elasticsearch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: create-secret-role
  namespace: elasticsearch
rules:
- verbs: ["create", "get", "patch"]
  apiGroups: [""]
  resources: ["secrets"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: es-provision-secrets
  namespace: elasticsearch
subjects:
- kind: ServiceAccount
  name: es-provision-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: create-secret-role
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: create-secret-role
  namespace: monitoring
rules:
- verbs: ["create", "get", "patch"]
  apiGroups: [""]
  resources: ["secrets"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: es-provision-secrets
  namespace: monitoring
subjects:
- kind: ServiceAccount
  name: es-provision-secrets
  namespace: elasticsearch
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: create-secret-role
---
apiVersion: batch/v1
kind: Job
metadata:
  name: es-provision-secrets
  namespace: elasticsearch
spec:
  template:
    spec:
      restartPolicy: OnFailure
      serviceAccount: es-provision-secrets
      containers:
      - name: kubectl
        image: bitnami/kubectl:1.31
        command: [/bin/bash, -c]
        args:
        - |
            jaegerPw=$(tr -dc 'A-Za-z0-9' < /dev/urandom | head -c 20)

            cat <<EOF | kubectl create -f -
            ---
            apiVersion: v1
            kind: Secret
            metadata:
              name: jaeger-basic-auth
            type: kubernetes.io/basic-auth
            stringData:
              username: jaeger
              password: "${jaegerPw}"
              roles: jaeger-role
            EOF

            cat <<EOF | kubectl create -f -
            ---
            apiVersion: v1
            kind: Secret
            metadata:
              name: jaeger-es-creds
              namespace: monitoring
            type: Opaque
            stringData:
              ES_USERNAME: jaeger
              ES_PASSWORD: "${jaegerPw}"
            EOF

            exit 0
---
kind: Secret
apiVersion: v1
metadata:
  name: es-roles
  namespace: elasticsearch
stringData:
  roles.yml: |-
    jaeger-role:
      cluster:
        - monitor
        - manage_index_templates
      indices:
        - names: [ 'jaeger*' ]
          privileges: ["read", "write", "manage"]
---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: &esClusterName default
  namespace: elasticsearch
spec:
  version: &esVersion 8.18.1
  volumeClaimDeletePolicy: DeleteOnScaledownOnly
  auth:
    roles:
      - secretName: es-roles
    fileRealm:
      - secretName: jaeger-basic-auth
  nodeSets:
    - name: controllers01
      count: 3
      config:
        node.roles:
          - master
      volumeClaimTemplates:
        - metadata:
            name: elasticsearch-data
          spec:
            storageClassName: zfs-generic-iscsi-csi
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 4Gi                  
      podTemplate:
        spec:
          initContainers: &nodeInitContainers
          - name: sysctl
            securityContext:
              privileged: true
              runAsUser: 0
            command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
          - name: install-plugins
            command:
            - sh
            - -c
            - |
              bin/elasticsearch-plugin install -b https://github.com/mindw/elasticsearch-prometheus-exporter/releases/download/8.18.1.0/prometheus-exporter-8.18.1.0.zip
              bin/elasticsearch-plugin list
          containers:
            - name: elasticsearch
              resources:
                requests:
                  memory: 1536Mi
                  cpu: 100m
                limits:
                  memory: 1536Mi
                  cpu: 1
    - name: data02
      count: 3
      config:
        node.roles:
          - data
      volumeClaimTemplates:
        - metadata:
            name: elasticsearch-data
          spec:
            storageClassName: zfs-generic-iscsi-csi
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 225Gi                  
      podTemplate:
        spec:
          initContainers: *nodeInitContainers
          containers:
            - name: elasticsearch
              resources:
                requests:
                  memory: 3Gi
                  cpu: 200m
                limits:
                  memory: 3Gi
                  cpu: 850m
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchLabels:
                      elasticsearch.k8s.elastic.co/cluster-name: *esClusterName
                      elasticsearch.k8s.elastic.co/statefulset-name: default-es-data02
                topologyKey: kubernetes.io/hostname
---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: dashboard
  namespace: elasticsearch
spec:
  version: 8.17.0
  count: 1
  elasticsearchRef:
    name: default
  podTemplate:
    spec:
      containers:
        - name: kibana
          resources:
            requests:
              cpu: "50m"
              memory: "1Gi"
            limits:
              cpu: "250m"
              memory: "1Gi"
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: default-es-user
  namespace: elasticsearch
data:
  username: ZWxhc3RpYw==
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    release: prom
  name: default-cluster-monitor
  namespace: elasticsearch
spec:
  endpoints:
  - basicAuth:
      password:
        key: elastic
        name: default-es-elastic-user
      username:
        key: username
        name: default-es-user
    interval: 10s
    path: /_prometheus/metrics
    port: https
    scheme: https
    tlsConfig:
      insecureSkipVerify: true
  selector:
    matchExpressions:
    - key: elasticsearch.k8s.elastic.co/statefulset-name
      operator: Exists
    matchLabels:
      common.k8s.elastic.co/type: elasticsearch